=pod

=head1 NAME

xdg-launch - an XDG compliant startup notification launcher

=head1 SYNOPSIS

B< xdg-launch> [I<OPTIONS>] [I<APPSPEC> [I<FILE>|I<URL>]|I<COMMAND>]
 B<xdg-launch> {B<-U>|B<--autostart>} [I<OPTIONS>] [I<APPID>|I<COMMAND>]
 B<xdg-launch> {B<-X>|B<--xsession>}  [I<OPTIONS>] [I<APPID>|I<COMMAND>]
 B<xdg-launch> {B<-E>|B<--startup>}   [I<OPTIONS>] [I<APPID>|I<COMMAND>]
 B<xdg-launch> {B<-E>|B<--session>}   [I<OPTIONS>] [I<APPID>|I<COMMAND>]
 B<xdg-launch> {B<-h>|B<--help>} [I<OPTIONS>] [I<APPSPEC> [I<FILE>|I<URL>]|I<COMMAND>]
 B<xdg-launch> {B<-V>|B<--version>}
 B<xdg-launch> {B<-C>|B<--copying>}

=head1 DESCRIPTION

B<xdg-launch> is a C<C> language program that can be used to launch XDG
desktop applications with startup notification.  Applications can be
launched by application id, mime type, menu category or command line.  A
file or URL can optionally be provided.

=head1 ARGUMENTS

The program accepts the following arguments:

=over

=item I<APPSPEC> = {I<APPID>|I<MIMETYPE>|I<CATEGORY>}

Specifies the XDG desktop application to launch.  The application
specifier, I<APPSPEC>, can be one of the following:

=over

=item [{B<-a>,B<--appid>}] I<APPID>

Specifies the application identifier of an XDG desktop application to
launch.  The application identifier, I<APPID>, can be one of the
following:

=over

=item 1.

The name of a desktop entry file without the F<.desktop> suffix (e.g.
C<gvim>); the name may contain a C</> if it is specified relative to a
user or system application directory, in which case it must not start
with a C</> or C<.>.

=item 2.

The name of a desktop entry file with the F<.desktop> suffix (e.g.
C<gvim.desktop>); the same restrictions as (1), above, apply; or,

=item 3.

The full path (absolute or relative) and filename of a desktop entry
file (e.g.  F</usr/share/applications/gvim.desktop>); the full path must
contain at least one C</> and start with either a C</> or a C<.>.

=back

The application identifier, I<APPID>, can alternately be specified as an
option argument using the B<--appid> option.

=item [B<--mimetype>] I<MIMETYPE>

A registered mime type of the form "I<type>B</>I<subtype>".  This
corresponds to the mime type of a file or scheme handler that will
identify the application to launch.

The mime type, I<MIMETYPE>, can alternatively be specified as an option
argument using the B<--mimetype> option.  Where the mime type would
conflict with an existing I<APPID>, it must be specified with the
B<--mimetype> option.

=item [B<--category>] I<CATEGORY>

An XDG menu specification category that identifies the application to
launch.

The XDG menu specification category, I<CATEGORY>, can alternatively be
specified as an option argument using the B<--category> option.  Where
the category would conflict with an existing I<APPID>, it must be
specified with the B<--category> option.

=back

Providing a non-option application specifier argument is mandatory
unless the B<--exec>, B<--appid>, B<--mimetype> or B<--category> options
are specified, in which case it should not be specified as a non-option
argument.

=item [{B<-f>,B<--file>}] I<FILE>

Specifies the file name with which to launch the application.  This is
used in C<%f> substitutions in the C<Exec> field of the XDG desktop
entry file or B<--exec> command line.  This may also be Specified with
the B<--file> option.

=item [{B<-u>,B<--url>}] I<URL>

Specifies the URL with which to launch the application.  This is used in
C<%u> substitutions in the C<Exec> field of the XDG desktop entry file
or B<--exec> command line.  This may also be specified with the B<--url>
option.

=item I<COMMAND> = {{B<-x>,B<--exec>} "I<EXEC ARGUMENT>..."|B<-e> I<EXEC ARGUMENT>...}

When specified with B<-e>, this option must be the last option on the
command line.  Options processing stops abruptly at this option and
remaining arguments are considered to be the command and the command
arguments to execute.  B<xdg-launch> will L<execve(3)> the arguments
under startup notification control in a similar fashion to C<sh -c>.
This may also be specified as a single string argument to C<sh -c> using
the B<--exec> option.

=back

=head2 ARGUMENT OPTIONS

Arguments can be optionally provided using the following options:

=over

=item B<-a>, B<--appid> I<APPLICATION_ID>

Override the application identifier.  This overrides the name of the XDG
application file.  When unspecified, the default is to use the
non-option I<APPID> argument to determine the application identifier.
This value, when available, is placed in the C<APPLICATION_ID> key-value
entry in the startup notification C<new> message.

=item B<--mimetype> I<MIMETYPE>

Specify a registered mime type, I<MIMETYPE>, of the form
"I<type>B</>I<subtype>".  This corresponds to the mime type of a file or
scheme handler that will identify the application to launch.

=item B<--category> I<CATEGORY>

Specify an XDG menu specification category, I<CATEGORY>, that identifies
the application to launch.

=item B<-f>, B<--file> I<FILE>

Specifies a filename, I<FILE>, to be substituted into the XDG desktop
entry C<Exec> command in accordance with XDG desktop entry
specifications.  The default is to use the non-option I<FILE> argument,
or no filename.  When B<--url> or URL is specified as a F<file://> URL,
this option defaults to the URL with the F<file:> portion removed.

=item B<-u>, B<--url> I<URL>

Specifies a URL, I<URL>, to be substituted into the XDG desktop entry
C<Exec> command in accordance with XDG desktop entry specifications.
The default is to use the non-option I<URL> argument, or no URL.  When
B<--file> or I<FILE> is specified, this option defaults to the I<FILE>
with a F<file://> portion prefixed.

=item B<-x>, B<--exec> I<COMMAND>

Specifies the command to execute.  This overrides the C<Exec> field of
the XDG desktop entry file.  When unspecified, the default is the
C<Exec> field of the XDG desktop entry file.

=back

=head1 OPTIONS

The options that are detailed below are recognized by B<xdg-launch>.
B<xdg-launch> uses L<getopt_long_only(3)>, so unambiguous abbreviations
of long options and long options with a single dash are also supported.

=head2 COMMAND OPTIONS

The default is to launch the application specified by C<APPSPEC>.  When
any of the following options are specified, the command mode changes.

Only one of B<--autostart>, B<--xsession>, B<--startup> or B<--session>
can be specified.

=over

=item B<-U>, B<--autostart>

Interpret and search for the desktop entry file as an C<AutoStart>
desktop entry instead of an C<Application> desktop entry.  This is the
default when invoked as B<xdg-autostart>.  The C<LAUNCHER> will default
to B<xdg-autostart> instead of B<xdg-launch>.  Aside from these
differences, the launcher operates in the same fashion.  This option is
intended for launching individual autostart entries.

=item B<-X>, B<--xsession>

Interpret and search for the desktop entry file as an C<XSession>
desktop entry instead of an C<Application> desktop entry.  This is the
default when invoked as B<xdg-xsession>.  The C<LAUNCHER> will default
to B<xdg-session> instead of B<xdg-launch>.  Aside from these
differences, the launcher operates in the same fashion.  This option is
intended for launching window managers.

=item B<-E>, B<--session>

Interpret and search for the desktop entry file as an C<XSession>
desktop entry instead of an C<Application> desktop entry.  This is the
default when invoked as B<xdg-session>.  The C<LAUNCHER> will default to
B<xdg-session> instead of B<xdg-launch>.  This option, therefore, acts
like the B<--xsession> option, with the exception that the program also
performs autostart for the window manager by executing the necessary
autostart desktop entries according to the XDG autostart specification.
This option is useful for launching a light-weight session for use with
a light-weight window manager.

=item B<-B>, B<--startup>

Interpret and search for the desktop entry file, if specified, as an
C<XSession> desktop entry instead of an C<Application> desktop entry.
This is the default when invoked as B<xdg-startup>.  The C<LAUNCHER>
will default to B<xdg-startup> instead of B<xdg-launch>.  This option,
therefore, acts like the B<--session> option, with the exception that
the program only performs autostart by executing the necessary autostart
desktop entries according to the XDG autostart specification, and does
not launch a window manager.
This option is useful for launching autostart entries after a
light-weight window manager has already started.

=item B<-I>, B<--info>

When specified, instead of launching the application selected, print
information about the final desktop file selected to launch the actions
that would have been taken to launch the desktop entry if this option
had not been specified.  This is equivalent to a dry run.

=item B<-h>, B<--help>

Prints usage information to standard output and exits.

=item B<-V>, B<--version>

Prints detailed version information and exits.

=item B<-C>, B<--copying>

Prints detailed copying permissions and exits.

=back

=head2 LAUNCH OPTIONS

The following options affect the parameters of the startup notification
C<new> message that is sent for launch:

=over

=item B<-L>, B<--launcher> I<LAUNCHER>

Specifies the string that will be used as the launcher when generating a
startup notification identifier.  The default is the name of this
program (e.g. C<xdg-launch>).

=item B<-l>, B<--launchee> I<LAUNCHEE>

Specifies the string that will be used as the launchee when generating a
startup notification identifier.  The default is the application
identifier.

=cut

=item B<-S>, B<--sequence> I<SEQUENCE>

Specifies a sequence number that will be used when generating a startup
notification identifier.  The default, when unspecified, is zero (0).

=item B<-n>, B<--hostname> I<HOSTNAME>

Specifies the host name that will be used when generating a startup
notification identifier.  The default, when unspecified, is the result
of C<hostname -f>.

=item B<-m>, B<--monitor> I<MONITOR>

Specifies the monitor, I<MONITOR>, on which the XDG application,
I<APPID>, is to launch.  When unspecified, the monitor currently
containing the pointer is used.  I<MONITOR> must be numerical zero-based
index of the desired monitor.  This value is placed in the C<MONITOR>
key-value entry in the startup notification C<new> message.  No value
will be placed when Xinerama (or RANDR) is not active for the display,
or for single-screen Xinerama (or RANDR) setups (C<SCREEN> is used in
this case). See L</Multiple Monitors>, below.

=item B<-s>, B<--screen> I<SCREEN>

Specifies the screen, SCREEN, on which the XDG application, I<APPID>, is
to launch.  When unspecified, the screen containing the pointer used.
For single-screen Xinerama (or RANDR) setups, the value of I<MONITOR> is
used for I<SCREEN>.  I<SCREEN> must be the numerical zero-based index of
the desired screen.  This value is placed in the I<SCREEN> key-value
entry in the startup notification C<new> message.  No value will be
placed when there is a single screen, and Xinerama (or RANDR) is not
active for the display.  See L</Multiple Screens>, below.

=item B<-w>, B<--workspace> I<DESKTOP>

Specifies the desktop, I<DESKTOP>, on which the XDG application is to
launch.  The default, when unspecified, is the current desktop for the
screen, I<SCREEN>.  This value is placed in the C<DESKTOP> key-value
entry in the startup notification C<new> message.

=item B<-t>, B<--timestamp> I<TIMESTAMP>

Specifies an X Server time stamp that corresponds to the X window event
that caused the launch to occur.  This is only useful in conjunction
with specification of an I<APPID> argument.  When the time stamp is not
specified, B<xdg-launch> will use the time of the last event (or
generate an event) for the time stamp.  The resulting time stamp
(whether specified or not) is used in the C<_TIME> portion of the
startup notification identifier, as well as the C<TIMESTAMP> key-value
entry in the startup notification C<new> message.

=item B<-N>, B<--name> I<NAME>

Specify the name of the XDG application.  This overrides the C<Name>
field from the XDG desktop entry file.  When unspecified, the default is
the C<Name> field from the XDG desktop entry file.  This value, when
available, is placed in the C<NAME> key-value entry in the startup
notification C<new> message.

=item B<-i>, B<--icon> I<ICON>

Specifies the icon name of the XDG application, I<ICON>.  This overrides
the C<Icon> field from the XDG desktop entry file.  When unspecified,
the default is the C<Icon> field from the XDG desktop entry file.  This
value, when available, is placed in the C<ICON> key-value entry in the
startup notification C<new> message.

=item B<-b>, B<--binary> I<BIN>

Specifies the name of the binary for the XDG application, I<BIN>.  This
overrides the C<TryExec> and C<Exec> fields from the XDG desktop entry
file.  When unspecified, default is the C<TryExec> field, or the
C<argv[0]> option of the C<Exec> field, from the XDG desktop entry file.
This value, when available, is placed in the C<BIN> key-value entry in
the startup notification C<new> message.

=item B<-d>, B<--description> I<DESCRIPTION>

Specifies the description of the XDG application, I<DESCRIPTION>.  This
overrides the C<Comment> field from the XDG desktop entry file.  When
unspecified, the default is to use the C<Comment> field from the XDG
desktop entry file, or a descriptive sequence such as "Staring Name".
This value, when available, is placed in the C<DESCRIPTION> key-value
entry in the startup notification C<new> message.

=item B<-W>, B<--wmclass> I<WMCLASS>

Specify the window manager class (matched against the C<res_name> or
C<res_class> of the C<WM_CLASS> property on a window), of the top-level
window that the XDG application is expected to map.  This overrides the
C<StartupWMClass> field of the XDG desktop entry file.  When
unspecified, the default is the C<StartupWMClass> field of the XDG
desktop entry file.  This value, when available, is placed in the
C<WMCLASS> key-value entry in the startup notification C<new> message.

=item B<-q>, B<--silent> I<SILENT>

Specify a boolean value (0/1) choosing whether visual feedback should be
provided for the launching XDG application, I<SILENT>.  Normally, when
unspecified, visual feedback would be determined from the presence of a
value of a C<StartupNotify> or C<StartupWMClass> field in the XDG
desktop entry file.  The I<SILENT> argument should be some boolean value
like 0 or 1 or "yes" or "no" or "true" or "false".  The default when
unspecified is to determine the value from the other fields of the XDG
desktop entry file.  This value, when available, is placed in the
C<SILENT> key-value entry in the startup notification C<new> message.

When unspecified, the C<SILENT> argument to the startup notification
message is set when the XDG desktop entry has neither a C<StartupNotify>
nor a C<StartupWMClass> field, or it only has a C<StartupNotify> field
but it is set to false.

=item B<-p>, B<--pid> I<PID>

Specifies the process identifier for the launch sequence.  The default
is the process identifier of the xdg-launch program.

=item B<--ppid>

Specify the process identity of a sub-reaper process under which the
launched application should be re-parented when its parent terminates.
This option defaults to the environment variable B<${XDG_SESSION_PID}>
and, if that does not exist, the process group leader of the process
invoking B<xdg-launch>.  To keep it from being set automatically, set it
to zero.  This is useful for applications launched by a window manager
to ensure that if the window manager crashes, it may be restarted by the
session and the application child processes will be re-parented to the
session.

=item B<-A>, B<--action> I<ACTION>

Specifies a desktop action, I<ACTION>, to perform instead of the default
action.  The default is to perform the default action in the desktop
entry file.  This value, when available, is placed in the "ACTION"
key-value entry in the startup notification "new" message.

=back

=head2 CONTEXT OPTIONS

Context options provide a means by which to guide the appropriate
selection of screen and monitor.  When the program is run from a key
binding associated with a window manager, the most appropriate screen or
monitor is that which contains the window that currently has the
keyboard focus.  When the program is launched from a pointer button
press, the most appropriate screen or monitor is that which contains the
pointer.

=over

=item B<-P>, B<--pointer>

When specified, B<xdg-launch> will determine the screen or monitor from
the current location of the pointer.  This option should be used when
B<xdg-launch> is invoked from a menu or mouse binding.  This option has
no effect on the screen when the screen was specified using either the
B<DISPLAY> environment variable or the B<--screen> option.  This option
has no effect on the monitor when the B<--monitor> option is also
specified.

Only one of B<--pointer> or B<--keyboard> can be specified.

=item B<-K>, B<--keyboard>

When specified, B<xdg-launch> will determine the screen or monitor from
the location of the window with the current keyboard focus.  This option
should be used when B<xdg-launch> is invoked from a command line or
keyboard binding.  This option has no effect on the screen when the
screen was specified using either the B<DISPLAY> environment variable
or the B<--screen> option.  This option has no effect on the monitor
when the B<--monitor> option is also specified.

Only one of B<--pointer> or B<--keyboard> can be specified.

=back

=head2 ASSIST OPTIONS

B<xdg-launch> is capable of assisting a non-startup-notification aware
window manager with startup notification completion, as well as
establishing initial settings of some NetWM/EWMH properties on any
application windows.  These options affect that behaviour.

=over

=item B<--assist>

Normally B<xdg-launch> will determine whether the window manager and
application toolkit requires assistance with startup notification.  The
default when a window manager exists that supports startup notification
is to not provide any assistance.  This option requests that
B<xdg-launch> provide startup notification assistance to any window
manager.

=item B<--no-assist>

Normally B<xdg-launch> will determine whether an existing window manager
and application toolkit requires assistance with startup notification.
The default when a window manager exists that does not support startup
notification is to provide assistance.  This option requests that
B<xdg-launch> not provide startup notification assistance to any window
manager.

=back

=head2 TOOL WAIT OPTIONS

The following tool wait options provide an equivalent functionality to
that of L<xtoolwait(1)>.

=over

=item B<-T>, B<--toolwait>

Normally, B<xdg-launch> will not exit, but will replace the foreground
process with the application using L<execve(3)>.  When this option is
specified, the behaviour changes: B<xdg-launch> will execute the
application in a background process and exit once the application has
started.  The criteria for when the application is considered as started
depends on the other L</JOB CONTROL OPTIONS>.

=item B<--timeout> [I<SECONDS>]

Specifies the amount of time to await completion of startup before
considering the application as launched.  Not specifying a value, or
specifying a value of zero (0), indicates to await completion of startup
indefinitely.  The default is fifteen (15) seconds.  This is the same
default as L<xtoolwait(1)>.  This timeout only applies to startup
notification completion.

=item B<--mappings> I<NWINDOWS>

Normally when expecting no startup notification completion message,
B<xdg-launch(1)> will consider the application as launched once it maps
the first client window.  When this option is specified, it will await
I<NWINDOWS> mappings before it considers the application launched.  The
default, when unspecified, is one window.

=item B<--withdrawn>

L<xtoolwait(1)> must be told when an application is a Window Maker
dockapp so that it may detect windows mapped in the C<WithdrawnState>.
B<xdg-launch> detects Window Make dockapps automatically and this option
is only necessary when the automatic detection fails for some reason.
This option is for compatibility with L<xtoolwait(1)> and, for the most
part, does not change behaviour.

=item B<--pid>

For compatibility with L<xtoolwait(1)>, requests that B<xdg-launch>
print the process id of the command to standard output.  B<xdg-launch>
will redirect the standard output of the application to standard error
when this option is specified.  Only one of B<-pid> or B<-wid> can be
specified.

(Note that this option conflicts with the usage of the B<--pid> option,
above, however, this usage does not accept an argument.)

=item B<--wid>

Print the id of the X window that caused startup completion to be
signalled to standard output for use with tools like L<wmctrl(1)> or
L<xdotool(1)>.  B<xdg-launch> will redirect the standard output of the
application to standard error when this option is specified.  Only one
of B<-pid> or B<-wid> can be specified.

=item B<--noprop>

When using the mapping of a window to determine startup notification
completion, simply use the creation of a top-level window as the
criteria instead of expecting a C<WM_STATE> property change.

=back

=head2 SESSION OPTIONS

The options that follow are for desktop session control.  They determine
what conditions will be awaited before launching the application or
command.  When no session option is specified, B<xdg-launch> may
determine automatically which conditions must be awaited depending on
the setting of the B<--autowait> and B<--no-autowait> options.

=over

=item B<--autowait>

Normally, when  B<xdg-launch> is executing an autostart entry, it will
determine whether the application needs to wait for resources or a
startup phase before launching the application.  This option requests
that B<xdg-launch> perform the wait when required.

=item B<--no-autowait>

Normally, when  B<xdg-launch> is executing an autostart entry, it will
determine whether the application needs to wait for resources or a
startup phase before launching the application.  This option requests
that B<xdg-launch> not wait for any resources or startup phase.

Note that some key fields in the F<.desktop> file of an application can
specify the autostart phase (.e.g. C<AutostartPhase>,
C<X-GNOME-Autostart-Phase>).  When the B<--autostart> option is option
is specified, the setting of these key fields may affect the default
settings of the session options, above.  In particular:

=over

=item C<Initializting>

When an autostart phase of C<Initializing> is specified, B<xdg-launch>
will not wait for any desktop resource before running the application or
command.

=item C<WindowManager>

When an autostart phase of C<WindowManager> is specified, or when
the B<--xsession> is specified, B<xdg-launch> will not wait for any
desktop resource before running the application or command.

=item C<Panel>

When an autostart phase of C<Panel> is specified, B<xdg-launch> will
wait for a window manager (regardless of the B<--manager> option) before
continuing; however, it will not wait for a tray or pager.  It will only
wait for a composite manager if B<--composite> was specified.

=item C<Desktop>

When an autostart phase of B<Desktop> is specified, B<xdg-launch> will
wait for a window manager (regardless of the B<--manager> option) before
continuing.  It will only await other resources if they have been
explicitly specified with options.

=item C<Applications>

When an autostart phase of B<Desktop> is specified, or when no autostart
phase is specified and B<--autostart> is given, B<xdg-launch> will wait
for a window manager (regardless of the B<--manager> option) before
continuing; however, it will only await other resources if they have
been explicitly specified with options.

=back

When the C<AutostartPhase> is not specified, B<xdg-launch> may use the
category in the F<.desktop> file of an application to determine the
autostart phase in which the application should be launched, as follows:

=over

=item C<DockApp>

Applications in this category will be launched in the C<Applications>
phase.

=item C<TrayIcon>

Applications in this category will be launched in the C<Applications>
phase, and will wait for a system tray to appear before launching.

=item C<Audio>

Applications in this category will wait for an audio server to appear.

=item C<SystemTray>

Application is this category will not wait for a system tray as the
application provides one.

=item C<Pager>

Application is this category will not wait for a desktop pager as the
application provides one.

=item C<Panel>

Application is this category will not wait for a system tray nor a
desktop pager (as most panels provide these).

=back

=back

The options that follow are for specifying the conditions that must be
awaited before B<xdg-launch> will proceed to launch the application.
None of these options has any effect when the B<--no-autowait> option is
specified.

=over

=item B<-M>, B<--manager>

Awaits the appearance of a window manager before launching the
application or command.  The default behaviour is to not wait for any
desktop resource before launching.

=item B<-Y>, B<--tray>

Awaits the appearance of a system tray before launching the application
or command.  The default behaviour is to not wait for any desktop
resource before launching.

=item B<-G>, B<--pager>

Awaits the appearance of a desktop pager (or desktop pager
specification) before launching the application or command.  The default
behaviour is to not wait for any desktop resource before launching.

=item B<-O>, B<--composite>

Awaits the appearance of a composite manager before launching the
application or command.  The default behaviour is to not wait for any
desktop resource before launching.

=item B<-R>, B<--audio>

Awaits the appearance of an audio server before launching the
application or command.  The default behaviour is to not wait for any
desktop resource before launching.

=item B<-g>, B<--guard> [I<SECONDS>]

Await resources for no longer than I<SECONDS> seconds before continuing.
Not specifying a value or specifying a value of zero (0) indicates to
wait indefinitely for the resource.  The default value is 2 seconds.

=back

=head2 HISTORY OPTIONS

When simple applications are launched, files containing the history of
recently launched applications are updated.  The following options
affect this behaviour.

=over

=item B<--history>, B<--no-history>

By default, when simple applications launched, files containing the
history of recent applications and recently used files and URLs are
updated.  For other applications (auto-start, X session), histories are
not kept by default.  These options specify whether histories are to be
kept or not.

=item B<-k>, B<--keep> I<NUMBER>

Specify the maximum number, I<NUMBER>, of commands or application
invocations that are kept in the recent history file.  The minimum value
is one, and the maximum value is 100.  The default value when
unspecified is 10.

This option is ignored when history is not in effect.

=item B<-r>, B<--recent> I<FILENAME>

Specify the I<FILENAME> of the recent history file.  When in exec mode,
store recent history of the executable in the file, I<FILENAME>.  In
exec mode, the default is F<$XDG_CONFIG_HOME/xde/run-history>.  When in
application mode, store recent history of the application in the file,
I<FILENAME>.  In application mode, the default is
F<$XDG_CONFIG_HOME/xde/recent-applications>.

This option is ignored when history is not in effect.

=back

=head2 CONTENT OPTIONS

The following options affect the current or future selection of
application by mime type or XDG category:

=over

=item B<--set-default>

When used with an I<APPID> argument, specifies that the selected
application id is to be made the default for its mime-types and
categories when successfully launched.  The default is to not make the
launch application the default for mime-type nor category.

This is a simple way of making an application the default for its
mime-types and categories.  For example:

    $> xdg-launch --set-default chromium

will make chromium the default web browser.  Either of the following
command lines will then result in launching chromium:

    $> xdg-launch text/html
    $> xdg-launch WebBrowser

If the application id was already on the default list, it will be moved
to the beginning of the list; otherwise, it will be inserted at the
beginning of the list.

=item B<--set-preferred>

When used with an I<APPSPEC> argument, specifies that the selected
application id is to be added to the recommended list for its mime-types
and categories when successfully launched.

If the application id was already on the recommended list, it will be
moved to the beginning of the list; otherwise, it will be inserted at
the beginning of the list.

=item B<--default>, B<--no-default>

When used with a I<MIMETYPE> or I<CATEGORY> argument, specifies whether
B<xdg-launch> should consider the default application defined for the
mime-type or category.  (The default application setting is defined by
the XDG mime-type specifications and is the familiar default used by
most desktop file managers.)  The default is to consider the default
application.

=item B<--recommend>, B<--no-recommend>

When used with a I<MIMETYPE> or I<CATEGORY> argument, specifies whether
B<xdg-launch> should consider the recommended applications defined for
the mime-type or category.  (The recommended applications setting is
defined by the XDG mime-type specifications and is the familiar
recommended list used by most desktop file managers.)  The default is to
consider the recommended applications.

=item B<--fallback>, B<--no-fallback>

When used with a I<MIMETYPE> or I<CATEGORY> argument, specifies whether
B<xdg-launch> should consider the fallback applications defined for the
mime-type or category.  (The fallback applications setting is defined by
the XDG mime-type specifications and is the familiar recommended list
used by most desktop file managers.)  The default is to consider the
fallback applications.

=back

=head2 GENERAL OPTIONS

The following are general options:

=over

=item B<-v>, B<--verbose> [I<LEVEL>]

Print diagnostic information to standard error during operation.  This
option can be repeated to increase the verbosity of output.  The default
level is 1.

=item B<-D>, B<--debug> [I<LEVEL>]

Prints debugging information to standard error during operation.  This
option can be repeated to increase the debugging level.  The default
level is 0.

=back

=head1 BEHAVIOUR

B<xdg-launch> exhibits the following behaviour:

=head2 TIME STAMPS

B<xdg-launch> is intended on being invoked directly from a user
interface, such as the root menu of a light-weight window manager, or an
X windows application such as a system tray menu.  To perform proper
startup notification, B<xdg-launch> determines the X server time stamp
of the invocation as follows:

=over

=item 1.

When B<xdg-launch> is invoked directly (executed) from an application
that has access to the X server event that invoked the launch, it can
supply the X server time stamp directly to B<xdg-launch> using the
B<--timestamp> option (see L</OPTIONS>).  B<xdg-launch> will use this
time stamp in the generation of the B<DESKTOP_STARTUP_ID> as well as the
C<TIMESTAMP> key-value pair in the startup notification C<new> message.

=item 2.

When B<xdg-launch> is invoked by an application that does not have
access to the X event that invoked the launch, B<xdg-launch> will change
the B<_TIMESTAMP_PROP> property on the root window to obtain a time
stamp.  In this way, B<xdg-launch> can simply be executed using the
execute mechanism of a light-weight window manager root menu or key
binding.

=item 3.

When B<xdg-launch> is invoked by another startup notification launcher,
it will obtain the time stamp (and other information) from the
B<DESKTOP_STARTUP_ID> environment variable.

=back

=head2 MULTIPLE HEADS

B<xdg-launch> fully supports multiple heads (screens) and Xinerama (or
RANDR) multiple physical monitors per screen.

=head3 Multiple Screens

When there are multiple screens, some window managers will adjust the
B<DISPLAY> environment variable to include the screen number for
launched applications.  For example, if the window manager B<DISPLAY>
environment variable is C<:7> and a program is launched on screen 1, the
program will be launched with a B<DISPLAY> environment variable of
C<:7.1>.  Therefore, when B<xdg-launch> detects a screen number in its
B<DISPLAY> environment variable, the screen used will be that specified
in the environment variable, unless the B<--keyboard>, B<--pointer> or
B<--screen> options are specified.  When B<xdg-launch> launches the
ultimate desktop application, it adjusts the B<DISPLAY> environment
variable to include the screen.  As most applications launch on the
default screen, this manages to get the desktop application to launch on
the correct screen.

=head3 Multiple Monitors

B<xdg-launch> detects Xinerama and RANDR multiple monitor setups.  When
the B<--keyboard>  or B<--pointer> options are specified, B<xdg-launch>
determines the monitor number from the keyboard focus window or pointer
location.  This monitor number is placed in the C<MONITOR=> field of the
startup notification C<new> message.  However, launched desktop
applications have no way of determining information outside of the
B<DESKTOP_STARTUP_ID> with which they were launched (the screen number
can be obtained from the B<DISPLAY> environment variable).  The
B<DESKTOP_STARTUP_ID> is formatted (ala libstartup-notification) as
follows:

    %s/%s/%d-%d-%s_TIME%lu

Where the fields are the launcher, launchee, pid, sequence, host and
timestamp.  The sequence number is of no use to the application and it
is also of no use to B<xdg-launch> because the PID changes with each
invocation.  Therefore, when the launcher is B<xdg-launch>, the
application (or window manager) can use the I<sequence> field as the
monitor index.

=head2 TERMINAL PROGRAMS

For desktop entries that set C<Terminal=true>, when they also set
C<StartupWMClass> to a class name specific to the program being
executed.  Most terminal programs (and L<xterm(1)> specifically) can set
the C<WMCLASS> name and class to something other than that of the
terminal program (i.e. instead of C<xterm.XTerm>).  When the desktop
entries do so, B<xdg-launch> will set the name attribute on the terminal
to the name specified when the terminal is launched.  This also permits,
for L<xterm(1)>, the ability to set special terminal resources by
application.  Because not many desktop entry files do this, when no
C<StartupWMClass> is specified, the C<APPID> or C<BINARY> will be used
instead and C<StartupWMClass> will be automatically populated.

This procedure provides additional assistance to window managers when
terminal programs do not properly observe startup notification.  (Note
that L<xterm(1)> does not properly observe startup notification, even
though it properly observes X11 Session Management, whereas many other
terminal emulators support both.)

=head2 AUTO START SESSION

When B<--session> is specified, the program starts the XDG auto start
procedure before launching the window manager specified by the I<APPID>
or B<--exec> command.  B<xdg-launch> creates a session by launching
autostart desktop entries in child processes and then executes the
I<APPID> or B<--exec> command for the window manager in the parent
process.  It attempts to become a process group leader before launching
children.  This should ultimately leave any child processes as children
of the window manager.  The window manager is executed in the parent
process and, therefore, the parent process will not exit until the
window manager exits.

When B<--startup> is specified, or no I<APPID> or B<--exec> command is
specified, instead of starting a window manager, establishes children so
that they will be re-parented to the process group leader when the
parent process exits.

=head2 TOOL WAIT

B<xdg-launch> can also be used to replace L<xtoolwait(1)> for XDG
applications when invoked with the appropriate options.  A convenience
script, L<xdg-toolwait(1)> is provided that mimics the options of
L<xtoolwait(1)>.  See L<xdg-toolwait(1)> for more information.

=head2 WINDOW MANAGERS

B<xdg-launch> interacts with window managers in the following ways:

=over

=item 1.

B<xdg-launch> creates startup notification identifiers using the
technique from the F<libstartup-notification> library.  This consists of
the following:

    while((p = strchr(launcher, '/'))) *p = '|';
    while((p = strchr(launchee, '/'))) *p = '|';
    sprintf(id, "%s/%s/%d-%d-%s_TIME%lu",
        launcher, launchee, getpid(), monitor,
        hostname, timestamp);

Compliant applications will place the startup notification identifier
from the B<DESKTOP_STARTUP_ID> environment variable in the
B<_NET_STARTUP_ID> property on its group leader top-level window before
it is mapped.  The window manager can use the C<_TIME%lu> portion of the
startup identifier to determine the X server time stamp for the event
that launched the application.  When the client does not set an initial
B<_NET_WM_USER_TIME>, this time stamp can be used in its stead.  It can
also use the C</%d-> portion of the startup identifier to determine the
process identifier, the C<-%d-> portion to determine the monitor on
which to start the application, and the C<-%s_TIME> portion of the
identifier to determine the host name of the launching machine.

=item 2.

Window managers that monitor startup notification messages may also use
the C<TIMESTAMP=> key-field entry in the C<new:> message for this
purpose, particularly when the C<WMCLASS=> field matches the resource
name or class of a newly mapped top-level window.

=item 3.

B<xdg-launch> neither changes nor removes the startup notification
sequence and is only responsible for issuing in the C<new:> or
C<change:> message.  The window manager or desktop environment should
issue a C<remove:> message when it first manages a top-level window with
a resource name or class than matches the C<WMCLASS=> field of an
outstanding C<new:> message.

=item 4.

Window managers that monitor startup notification messages and
associates them with managed top-level windows may use the following
fields to populate missing properties on those windows:

=over

=item C<ID=>

The window manager may use this field to populate the B<_NET_STARTUP_ID>
property on the window (group) when it is missing.

=item C<HOSTNAME=>

The window manager may use this field to populate the
B<WM_CLIENT_MACHINE> property when it is missing or is not a fully
qualified domain name.  This field can also be derived from the C<ID=>
field.

=item C<PID=>

The window manager may use this field to populate the B<_NET_WM_PID>
property when it is missing.  This field can also be derived from the
C<ID=> field.

=item C<MONITOR=>

The window manager may use this field to choose the Xinerama (or RANDR)
screen on which the top-level window (group) will be mapped.  It may
also be used to populate the B<_NET_WM_FULLSCREEN_MONITORS> property
when it is missing.

=item C<SCREEN=>

The window manager may use this field to choose the Xinerama (or RANDR)
or multi-head screen on which the top-level window (group) will be
mapped.  When it specifies a Xinerama (or RANDR) screen, it may also be
used to populate the B<_NET_WM_FULLSCREEN_MONITORS> property when it is
missing.

=item C<DESKTOP=>

The window manager may use this field to populate the
B<_NET_WM_DESKTOP>, B<_WIN_WORKSPACE>, or B<_DT_WORKSPACE_PRESENCE>
property when missing or otherwise unspecified.

=item C<TIMESTAMP=>

The window manager may use this field to populate the
B<_NET_WM_USER_TIME> property when it is missing.  This field can also
be derived from the C<ID=> field.

=item C<NAME=>

The window manager may use this field to populate the B<WM_NAME>,
B<_NET_WM_NAME>, or B<_NET_WM_VISIBLE_NAME> properties when they are
missing or empty.

=item C<ICON=>

The window manager may use this field to establish an icon for the
window when the B<WM_ICON>, B<_NET_WM_ICON> or B<_KDE_NET_WM_ICON>
properties are missing or otherwise unusable.

=item C<WMCLASS=>

The window manager may use this field to associate a startup
notification sequence with a newly mapped top-level window.

=item C<COMMAND=>

The window manager may use this field when the B<WM_COMMAND> field is
missing (and for the same purposes).  Because rather complicated shell
expansion would be required to expand the command, it cannot be used to
populate the B<WM_COMMAND> property; however, it may be executed by
passing it literally as a shell command.  I suppose one could populate
B<WM_COMMAND> with C<sh>, C<COMMAND> if necessary.

=back

=back

=head2 RECENTLY USED FILES, URLS, APPLICATIONS

By default, when simple applications are launched by B<xdg-launch>,
files that retain the history of recently used files, URLs and
applications are automatically updated.  When other applications
(auto-start, X session) are launch, histories are not kept by default.
Although the use of the B<--history> and B<--no-history> options
override the default behaviour, the default is sufficient for the
purpose of properly updating recent use files.

Histories are written to three pairs of files (see L</FILES>).  The
first pair keeps recently executed commands and recently launched
applications in a simple text format, one per line, with the most recent
at the top.  These two files were historically used by L<xde-run(1)> and
L<xde-app(1)>.
The default files are
F<$XDG_CONFIG_HOME/xde/run-history> and
F<$XDG_CONFIG_HOME/xde/recent-applications>.

The second pair keeps recently used files and URLs in a non-XBEL, XML
file format used historically by GNOME.  Applications are recorded in
each as a reference to the desktop entry, F<.desktop> file of the
application.  The second in the pair only contains the F<.desktop>
entries, while the first contains all file and URL references.
Some older GTK application file selection dialogues use these files.
The default files are
F<$HOME/.recently-used> and
F<$HOME/.recent-applications>.

The last pair keeps recently used files and URLs in an XBEL, XML file
format that is currently part of the XDG specifications.  Files and URLs
are contained in the first of the pair, and application F<.desktop>
entries are only contained in the second.
The default files are
F<$XDG_DATA_HOME/recently-used.xbel> and
F<$XDG_DATA_HOME/recent-applications.xbel>.

Current file dialogues and applications use only the last pair of
XBEL-formatted files.  Application that provides menu and dialogue
access to both lists are L<xde-run(1)>, L<xde-app(1)> and
L<xde-recent(1)>.

=head1 ENVIRONMENT

The following environment variables are examined by B<xdg-launch>:

=over

=item B<DISPLAY>

Use by B<xdg-launch> to determine the X display and default screen On
which it has been invoked.

=item B<DESKTOP_STARTUP_ID>

Used by B<xdg-launch> at program startup to determine whether it itself
has been launched with startup notification.  The B<DESKTOP_STARTUP_ID>
is reused in this case.  This environment variable is set to the startup
notification identifier just prior to executing the launched program.

=item B<LANG>

Used by B<xdg-launch> at program startup to determine the language to
use to select the language for C<Name=> and C<Comment=> fields from the
desktop entry file.

=item B<HOME>

Used by B<xdg-launch> to determine the user's home directory.

=item B<XDG_DATA_HOME>

Used by B<xdg-launch> to determine the user's XDG data directory.  This
defaults to F<$HOME/.local/share>.  The F<applications> (or
F<xsessions>) subdirectory under this directory is the first searched to
locate desktop entry files.  See the XDG Desktop Entry file
specification for more information.

=item B<XDG_DATA_DIRS>

Used by B<xdg-launch> to determine the system XDG data directories.
This defaults to F</usr/local/share:/usr/share>.  The F<applications>
(or F<xsessions>) subdirectory under these directories are searched in
order to locate desktop entry files.  See the XDG Desktop Entry file
specification for more information.

=item B<XDG_CONFIG_HOME>

Used by B<xdg-launch> to determin the user's XDG configuration directory.
This defaults to F<$HOME/.config>.  The F<autostart> subdirectory under
this directory is the first searched to locate desktop entry files.  See
the XDG Desktop Entry file specification for more information.

=item B<XDG_CONFIG_DIRS>

Used by B<xdg-launch> to determine the system XDG configuration
directories.  This defaults to F</etc/xdg>.  The F<autostart>
subdirectory under these directories are searched in order to locate
desktop entry files.  See the XDG Desktop Entry file specification for
more information.

=item B<XDG_SESSION_PID>

Used by B<xdg-launch> to set the sub-reaper process of launched
applications.  Note that when performing autostart, B<xdg-launch> will
set this environment variable to its own PID when the variable is not
already set.

=back

=head1 FILES

B<xdg-launch> uses the following files:

=over

=item F<$XDG_CONFIG_HOME/xde/run-history>

The default location of the F<run-history> file.  This is a simple text
file with the commands that were last run using the L<xde-run(1)> dialog,
one per line, with the oldest entries lower in the file.  For later use
by L<xde-run(1)>, B<xdg-launch> adds an entry to this file containing
the command line that was executed.

=item F<$XDG_CONFIG_HOME/xde/recent-applications>

The default location of the F<recent-applications> file.  This is a
simple text file with the application ids that were last run using the
L<xde-app(1)> dialog, one per line, with the oldest entries lower in the file.
For later use by L<xde-app(1)>, B<xdg-launch> adds an entry to this file
containing the application id that was launched.

=item F<$XDG_DATA_HOME/recently-used>, F<$HOME/.recently-used>

The default locations of the non-XBEL-formatted, co-mingled,  recently
used files and URLs.  When the first location is not present, the second
is used.  The co-mingled file predates the separated
F<$HOME/.recent-applications> file and record recent applications by
listing the F<.desktop> file as a recently used file.

=item F<$HOME/.recent-applications>

The default location of the  non-XBEL-formatted, separate, recent
applications file.  The file records recent applications by listing the
F<.desktop> file as a recently used file.  The difference between this
file and the F<$HOME/.recently-used> file is that this file only
records recently used F<.desktop> files.

=item F<$XDG_DATA_HOME/recently-used.xbel>

The default location of the XBEL-formatted recently used files and URLs
file.  The file only records files and URLs used by launched
applications.  F<.desktop> files are not recorded here.

=item F<$XDG_DATA_HOME/recent-applications.xbel>

The default location of the XBEL-formatted rececent applications file.
The file only records launched applications (by F<.desktop> file).

=item F<$HOME/.gtkrc-2.0.xde>

The location of the XDE theme file that will be used for the GTK theme
when it exists.  The program will also respect the C<_XDE_THEME_NAME>
property on the root window of the screen for which the program was
launched.

=back

=head1 BUGS

B<xdg-launch> has way too many options.
Please report other bugs to the source code repository at
L<https://github.com/bbidulock/xdg-launch/issues>.

=head1 SEE ALSO

L<xdg-show(1)>,
L<xdg-assist(1)>,
L<xdg-monitor(1)>,
L<xdg-toolwait(1)>,
L<xdg-autostart(1)>,
L<xdg-xsession(1)>,
L<xdg-session(1)>,
L<xde-run(1)>,
L<xde-app(1)>,
L<xde-recent(1)>,
L<execve(3)>,
L<getopt_long_only(3)>,
L<xtoolwait(1)>,
L<wmctrl(1)>,
L<xdotool(1)>,
L<xterm(1)>,
Startup Notification
L<http://standards.freedesktop.org/startup-notification-spec/startup-notification-0.1.txt>.

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>

=cut

# vim: set sw=4 tw=72 nocin spell spelllang=en_ca:
